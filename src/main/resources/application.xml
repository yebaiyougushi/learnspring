<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>

    <aop:config>
        <aop:aspect id="log" ref="logging">
            <aop:pointcut id="selectAll"
                          expression="execution(* com.example.learnspring.*.*(..))"/>
            <aop:before pointcut-ref="selectAll" method="beforeAdvice"/>
            <aop:after pointcut-ref="selectAll" method="afterAdvice"/>
            <aop:after-returning pointcut-ref="selectAll"
                                 returning="retVal"
                                 method="afterReturningAdvice"/>
            <aop:after-throwing pointcut-ref="selectAll"
                                throwing="ex"
                                method="AfterThrowingAdvice"/>
        </aop:aspect>
    </aop:config>
    <bean id="logging" class="com.example.learnspring.Logging"/>

    <!--&lt;!&ndash; Definition for profile bean &ndash;&gt;-->
    <!--<bean id="profile" class="com.example.learnspring.main.Profile">-->
    <!--</bean>-->

    <!-- Definition for student1 bean -->
    <!--<bean id="student1" class="com.example.learnspring.Student">-->
        <!--<property name="name"  value="Zara" />-->
        <!--<property name="age"  value="11"/>-->
    <!--</bean>-->

    <!-- Definition for student2 bean -->
    <bean id="student" class="com.example.learnspring.Student">
        <property name="name"  value="Nuha" />
        <property name="age"  value="2"/>
    </bean>

    <!--<bean id="helloWorld" class="com.example.learnspring.main.HelloWorld"-->
          <!--init-method="init" destroy-method="destroy">-->
        <!--<property name="message" value="Hello World!"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;自动装配ByName&ndash;&gt;-->
    <!--<bean id="textEditor" class="com.example.learnspring.main.TextEditor" autowire="byName">-->
        <!--<property name="name" value="spellcheck name"/>-->
        <!--&lt;!&ndash;构造函数注入依赖&ndash;&gt;-->
        <!--&lt;!&ndash;<constructor-arg ref="spellChecker"/>&ndash;&gt;-->
        <!--&lt;!&ndash;设值函数注入依赖&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="spellChecker" ref="spellChecker"/>&ndash;&gt;-->
        <!--&lt;!&ndash;注入内部类&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="spellChecker" >&ndash;&gt;-->
            <!--&lt;!&ndash;<bean id="spellChecker" class="com.example.learnspring.main.SpellChecker">&ndash;&gt;-->
            <!--&lt;!&ndash;</bean>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
    <!--</bean>-->

     <!--Definition for spellChecker bean-->
    <!--<bean id="spellChecker" class="com.example.learnspring.main.SpellChecker">-->
    <!--</bean>-->
    <!--<bean class="com.example.learnspring.main.InitHelloWorld" />-->
    <!--&lt;!&ndash; Definition for javaCollection &ndash;&gt;-->
    <!--<bean id="javaCollection" class="com.example.learnspring.collection.JavaCollection">-->

        <!--&lt;!&ndash; results in a setAddressList(java.util.List) call &ndash;&gt;-->
        <!--<property name="addressList">-->
            <!--<list>-->
                <!--<value>INDIA</value>-->
                <!--<value>Pakistan</value>-->
                <!--<value>USA</value>-->
                <!--<value>USA</value>-->
            <!--</list>-->
        <!--</property>-->

        <!--&lt;!&ndash; results in a setAddressSet(java.util.Set) call &ndash;&gt;-->
        <!--<property name="addressSet">-->
            <!--<set>-->
                <!--<value>INDIA</value>-->
                <!--<value>Pakistan</value>-->
                <!--<value>USA</value>-->
                <!--<value>USA</value>-->
            <!--</set>-->
        <!--</property>-->

        <!--&lt;!&ndash; results in a setAddressMap(java.util.Map) call &ndash;&gt;-->
        <!--<property name="addressMap">-->
            <!--<map>-->
                <!--<entry key="1" value="INDIA"/>-->
                <!--<entry key="2" value="Pakistan"/>-->
                <!--<entry key="3" value="USA"/>-->
                <!--<entry key="4" value="USA"/>-->
            <!--</map>-->
        <!--</property>-->

        <!--&lt;!&ndash; results in a setAddressProp(java.util.Properties) call &ndash;&gt;-->
        <!--<property name="addressProp">-->
            <!--<props>-->
                <!--<prop key="one">INDIA</prop>-->
                <!--<prop key="two">Pakistan</prop>-->
                <!--<prop key="three">USA</prop>-->
                <!--<prop key="four">USA</prop>-->
            <!--</props>-->
        <!--</property>-->

    <!--</bean>-->

</beans>